import subprocess
import geoip2.database


def geo_locate_current_connections():
    pass_fail = True
    country_dict = {}

    remote_addresses = subprocess.check_output(["powershell.exe",
                                                "Get-NetTCPConnection | select RemoteAddress"])
    remote_addresses_string = str(remote_addresses, "utf-8")
    remote_addresses_list = remote_addresses_string.split("\r\n")
    for i, new_value in enumerate(remote_addresses_list):
        remote_addresses_list[i] = new_value.strip()

    # set up database reader with path
    # This product includes GeoLite2 data created by MaxMind, available from
    # https://www.maxmind.com
    file_to_open = "GeoLite2-Country.mmdb"
    reader = geoip2.database.Reader(file_to_open)

    for i in remote_addresses_list:
        # check for real values
        if i:
            if i[0].isdigit():
                if i != "0.0.0.0" and i != "127.0.0.1":
                    response = reader.country(i)
                    string_test = str(response)
                    country_offset = string_test.find("country")
                    english_name = string_test.find("en", country_offset)
                    name_length = string_test[english_name + 6:].find("'")
                    new_country_name = string_test[(english_name + 6):
                                                   (english_name + 6 + name_length)]
                    # Sometimes there will be a malformed country name
                    # Usually occurs with IPv6 addresses
                    # Needs further testing
                    country_dict[i] = new_country_name

    # Check for suspicious countries, update list as needed
    suspicious_country = []
    if "Russia" in country_dict.values():
        pass_fail = False
        suspicious_country.append("Russia")
    if "China" in country_dict.values():
        pass_fail = False
        suspicious_country.append("China")

    if not pass_fail:
        output = (False, "Please investigate further. "
                         "You are connected to the following suspicious countries: " +
                  ', '.join(suspicious_country) + ".")
    else:
        output = (True,
                  "Your computer is not connected to any suspicious locations.")

    return output
