import gui


def check_admin_password(window):
    password = window.get_input("Enter Password:")
    pass_fail = True

    filepath = gui.resource_path('common_password_list')
    with open(filepath) as fp:
        for test, line in enumerate(fp):
            line = fp.readline()
            line = line.rstrip('\n')
            if line == password:
                pass_fail = False
                break

    if not pass_fail:
        link = "<a href='https://support.microsoft.com/en-us/help/" \
               "4490115/windows-change-or-reset-your-password'>Link</a>"
        output = (
            1,
            "Your Administrator password matches on of "
            "the top 500 most common passwords. "
            "Follow the steps here: {}, "
            "to change it to something more secure.".format(link))

        return output

    features = {"length": len(password), "uppercase letters": 0, "lowercase letters": 0, "numbers": 0, "symbols": 0,
                "middle numbers/symbols": 0, "shannon entropy": 0, "letters only": False, "numbers only": False,
                "repeat characters": 0, "consecutive uppercase": 0, "consecutive lowercase": 0,
                "consecutive numbers": 0, "sequential letters": 0, "sequential numbers": 0, "sequential symbols": 0,
                "repeat chars": 0, "only first char uppercase": False, "only last char number": False,
                "only last char symbol": False}

    previous = None

    # check uppercase, lowercase, numbers, symbols, middle numbers/symbols, and consecutive characters
    for i in range(0, len(password)):
        letter = password[i]

        if i > 0 and letter == previous:
            features["repeat chars"] += 1

        if letter.isupper():
            features["uppercase letters"] += 1
            if i > 0 and previous.isupper():
                features["consecutive uppercase"] += 1
        elif letter.islower():
            features["lowercase letters"] += 1
            if i > 0 and previous.islower():
                features["consecutive lowercase"] += 1
        elif letter.isdigit():
            features["numbers"] += 1
            if 0 < i < len(password) - 1:
                features["middle numbers/symbols"] += 1
            if i > 0 and previous.isdigit():
                features["consecutive numbers"] += 1
        else:
            features["symbols"] += 1

        previous = password[i]

    # check for sequential symbols

    # check shannon entropy

    # check for a letters only or numbers only password
    if features["length"] == features["uppercase letters"] + features["lowercase letters"]:
        features["letters only"] = True
    elif features["length"] == features["numbers"]:
        features["numbers only"] = True

    # check for first char uppercase, last char number, and last char symbol
    if password[0].isupper() and features["uppercase letters"] == 1:
        features["only first char uppercase"] = True

    if password[-1].isdigit() and features["numbers"] == 1:
        features["only last char number"] = True
    elif not password[-1].isalnum():
        features["only last char symbol"] = True

    return features




